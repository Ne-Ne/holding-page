//
// Buttons
// --------------------------------------------------


// Base styles
// --------------------------------------------------

// Core styles
.btn {
  display: inline-block;
  padding: 6px 12px; // TODO: variable?
  margin-bottom: 0; // For input.btn
  font-size: $fontSizeBase;
  font-weight: 500;
  line-height: $lineHeightBase;
  text-align: center;
  vertical-align: middle;
  cursor: pointer;
  border: 1px solid $btnBd; // TODO: variable for border width?
  border-radius: $borderRadiusBase; // TODO: be button specific with radius/ padding vars?
  white-space: nowrap;

  &:focus {
    @include tb_tab-focus();
  }

  &:hover,
  &:focus {
    color: #fff; // TODO: variable?
    text-decoration: none;
  }

  &:active,
  &.active {
    outline: 0;
    background-image: none;
    @include tb_box-shadow(inset 0 3px 5px rgba(0,0,0,.125)); // TODO: mixin / variable?
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & { // TODO: do we really only want fieldsets to be the disabled containers?
    cursor: default;
    pointer-events: none; // Future-proof disabling of clicks
    @include tb_opacity(.65); // TODO: ensure the opacity mixin can handle decimals
    @include tb_box-shadow(none);
  }

}


// Button Sizes
// -------------------------

// Large
.btn-large {
  padding: $paddingLarge;
  font-size: $fontSizeLarge;
  border-radius: $borderRadiusLarge;
}

// Small
.btn-small {
  padding: $paddingSmall;
  font-size: $fontSizeSmall;
  border-radius: $borderRadiusSmall;
}

// Mini
.btn-mini {
  padding: $paddingMini;
  font-size: $fontSizeMini;
  border-radius: $borderRadiusSmall;
}


// Icons in buttons
// -------------------------

// TODO: figure this shit out

// Block button
// -------------------------

.btn-block {
  display: block;
  width: 100%;
  padding-left: 0;
  padding-right: 0;
}

// Vertically space out multiple block buttons
.btn-block + .btn-block {
  margin-top: 5px; // TODO: variable? match up with the horizontal spacing we use on .btn-group?
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}


// Alternate buttons
// --------------------------------------------------

.btn {
  color: $btnColor;
  @include btn-pseudo-states($btnBg, $btnBd);
}
.btn-primary {
  @include btn-pseudo-states($btnBgPrimary, $btnBdPrimary);
}
// Warning appears as orange
.btn-warning {
  @include btn-pseudo-states($btnBgWarning, $btnBdWarning);
}
// Danger and error appear as red
.btn-danger {
  @include btn-pseudo-states($btnBgDanger, $btnBdDanger);
}
// Success appears as green
.btn-success {
  @include btn-pseudo-states($btnBgSuccess, $btnBdSucess);
}
// Info appears as a blue-green
.btn-info {
  @include btn-pseudo-states($btnBgInfo, $btnBdInfo);
}

// Site Butttons
.btn-red {
  @include btn-pseudo-states($btnBg-porto-red, $btnBd-porto-red);
}
.btn-green {
  @include btn-pseudo-states($btnBg-porto-green, $btnBd-porto-green);
}
.btn-blue {
  @include btn-pseudo-states($btnBg-porto-blue, $btnBd-porto-blue);
}



// Link buttons
// --------------------------------------------------

// Make a button look and behave like a link
.btn-link,
.btn-link:active,
.btn-link[disabled],
fieldset[disabled] .btn-link { // TODO: should we only allow fieldset to be disabled?
  background-color: transparent;
  background-image: none;
  @include tb_box-shadow(none);
}
.btn-link,
.btn-link:hover,
.btn-link:focus,
.btn-link:active {
  border-color: transparent;
}
.btn-link {
  color: $linkColor;
  font-weight: normal;
  cursor: pointer;
  border-radius: 0;
}
.btn-link:hover,
.btn-link:focus {
  color: $linkColorHover;
  text-decoration: underline;
  background-color: transparent;
}
.btn-link {
  &[disabled],
  fieldset[disabled] & {
    &:hover,
    &:focus {
      color: $grayDark;
      text-decoration: none;
    }
  }
}
